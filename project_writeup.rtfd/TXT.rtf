{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red102\green177\blue50;}
\margl1440\margr1440\vieww18400\viewh13520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs36 \cf0 Introduction\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6400\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Music is a fascinating subject, involving an examination of the quality of sound, through timber, tempo and volume, and the patterns of sound that make up a song. We are inherently drawn towards patterns and music lovers are particularly drawn towards the patterns inherent in a composition. In classical western music this pattern appears as a progression of chords. Most trained musicians and music theoreticians can attest to their ability to predict, given the current state of the music, the next chord in the progression series. Our goal in this project was to try and replicate this ability that music aficionados possess by a computer. By replicating this ability we could use the prediction to generate accompaniment sound, assist in the composition process and even generate new music. Early on, while doing our background research for our project we learnt that there are several genres of music that do not rely on the ubiquitous chord scheme as defined by classical western music. For instance Indian music can be defined as the progression through different Ragas, the Indian version of western scale system. We wanted our solution to be able to take any genre of music and produce a progression. To try and model these different genres of music, we decided to use an unsupervised learning algorithm that found the best clustering for an entire genre of music. Each of the clusters would represent a motif of sound, and the combination of these motifs in transition would represent a low resolution of the song; in the case of western music these motifs would represent chords and for Indian music these motifs would represent the Ragas. Using a representation of the current state of the music including its current motif we then used a supervised learning algorithm to predict the next motif in the progression.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
There has already been a lot of research done regarding the progression of chords in western music, however we were unable to find any significant examples of research done to try and find the defining motifs of the music using unsupervised learning. Other research done to try and predict the progression of chords use external software to find the chords of the piece and then use various ways to try and predict the next chord in the progression. One of the extolled ways to do this has been to try and model the musical genre as a Markov chain or as a Hidden Markov Model and using some form of reinforcement learning to predict the next chord progression given the current state.\
\
Results\
Here we see the graph we plotted for the k-means test where we plotted the value of k against the average silhouette value for that k. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic best_k_all_songs.png \width11520 \height8640
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs36 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\cb2 (Please run the program to get the confusion matrix I didn\'92t have sklearn installed on the flight; remember to just run it on the taylor swift file. Since her songs are giving the best results.)\cb1 \
Here we have the confusion matrix for our implementation of SVM on our model.\
\
0	1	2	3	4	5	6	7\
1\
2\
3\
4\
5\
6\
7\
\
Here we have a confusion matrix for our baseline test of simply predicting the same motif.\
\
0	1	2	3	4	5	6	7\
1\
2\
3\
4\
5\
6\
7\
\
Here we have a confusion matrix for our testing the pattern matching algorithm.\
\cb2 (Fill this out using the poster we used for cs221)\cb1 \
\
0	1	2	3	4	5	6	7\
1\
2\
3\
4\
5\
6\
7\
\
Analysis\
The results from our k-means implementation are fantastic. As we can see from the graph there is a clear peak in the graph when k = 7.  This is backed up with well known and well studied music theory that indicates that a scale is built up of 7 steps. Each chord is then built up from these 7 steps, hence finding that the value of k is corroborated by music theory is  evidence of the applicability of our model.\
\
For the prediction part of our assignment we generated the confusion matrix for the baseline and the SVM model. Clearly the SVM does better than the baseline, however there is still room for improvement. As we can see in the following figure, which is a representation of how the song \'93I knew you were trouble\'94 by Taylor Swift, there is a lot of repetition of the previous motif, the red boxes represent the largest areas which show this repetition, within the song. The SVM quickly learns that reporting the same motif maximizes the prediction accuracy; therefore as we can see in the following figure, unless the motif progression is obvious it seems to predict the same motif every time. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs24 \cf0 {{\NeXTGraphic i_knew_you_were_trouble.png \width14112 \height10224
}¬}
\fs36 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
However, for our problem we are more interested in changes in the motif and therefore there is more utility in predicting a motif change than a motif repeat. We discuss possible solutions to this problem in the Future section. \
\
While the SVM did pretty well on the data, we found that an ad-hoc implementation of a pattern matcher produced better results. The reason for this alludes towards the fact that motifs generally follow a pattern, that is they seem to change in the same pattern as seen in the figure highlighted by the blue boxes, hence when a bar change is predicted the pattern matching algorithm picks up on this and is more likely to predict the correct following progressions.\
\
\
Future\
Though we have shown that we can effectively find the motifs of a given genre and predict the transitions between those motifs using an SVM there are further improvements we can make to the pipeline that will enhance the system\'92s ability to achieve its objective. By looking at the assumptions we have made we first address the fact that we assume that the tempo of the music is constant throughout the piece; however we know that in many songs this is not the case. The change of tempo is a well known musical device that helps increase tension and resolution in a piece. By not modeling this value, we miss out on a key musical device. In future research we could use another learning algorithm that uses the current state of the music including the current motif to predict the tempo of the next bar in the piece. For example we know of a musical device known as cadences in classical western music. It is common practice for musicians to increase the tempo of a piece just before an authentic cadence to increase tension and then rapidly decrease tempo for the resolution. Using our current model, we could do research to try and map these well known music phenomena in a learning algorithm. The second assumption we make is that we assume all the pieces are played in common time, that is 4 crotchet beats per bar, though this is a safe assumption to make considering most music does follow common time, there are still pieces out there that do not. To try and map these pieces we could use another supervised learning algorithm to predict, given certain features of the music, what time signature the piece is played in. Our last assumption is that the music starts on the first beat, however it is relatively common in music to have an off beat that leads into the first bar of the piece. Further research could be done to try and predict motifs for all 3 possible permutations of these bars and then use a reinforcement learning algorithm to narrow down on the correct bar. As we mentioned in the analysis we found that the SVM quickly learns to predict motif repetitions which we want to try and avoid. To do so we could use another algorithm to predict for motif changes first and only use our predictor when the algorithm predicts a motif change with a reasonably large probability. This way we would rarely ever have any motif repetitions, and hence we would avoid the overfitting error that we are falling into. In conjunction we could avoid such biases in the data by normalizing the number of motif transitions during training. As we can see there is a lot of future research that can be done in this field, that we have barely scratched the surface of.\
\
\
Difference between cs229 and cs221\
We are using parts of the same project for both the cs229 and cs221 final project. However to ensure that we are not violating the honor code we have divided our research up into cs229 and cs221 parts. For cs229, since the class is focused on machine learning, the implementation and research for the supervised and unsupervised learning algorithms are dedicated to its final project. Since cs221 is more focused on modeling with some overlap in the machine learning implementation, our model and pipeline as well as the selection of k for then unsupervised learning using the average silhouette value is part of our cs221 final project.\
\
\
}